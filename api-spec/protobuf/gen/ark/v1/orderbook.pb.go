// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.12
// source: ark/v1/orderbook.proto

package arkv1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PlaceOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           string       `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Side             OrderSide    `protobuf:"varint,2,opt,name=side,proto3,enum=ark.v1.OrderSide" json:"side,omitempty"`
	ContractType     ContractType `protobuf:"varint,3,opt,name=contract_type,json=contractType,proto3,enum=ark.v1.ContractType" json:"contract_type,omitempty"`
	StrikeHashRate   float64      `protobuf:"fixed64,4,opt,name=strike_hash_rate,json=strikeHashRate,proto3" json:"strike_hash_rate,omitempty"`
	StartBlockHeight int32        `protobuf:"varint,5,opt,name=start_block_height,json=startBlockHeight,proto3" json:"start_block_height,omitempty"`
	EndBlockHeight   int32        `protobuf:"varint,6,opt,name=end_block_height,json=endBlockHeight,proto3" json:"end_block_height,omitempty"`
	Price            uint64       `protobuf:"varint,7,opt,name=price,proto3" json:"price,omitempty"`
	Quantity         int32        `protobuf:"varint,8,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Pubkey           string       `protobuf:"bytes,9,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	ExpiresAt        int64        `protobuf:"varint,10,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
}

func (x *PlaceOrderRequest) Reset() {
	*x = PlaceOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_orderbook_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaceOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceOrderRequest) ProtoMessage() {}

func (x *PlaceOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_orderbook_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceOrderRequest.ProtoReflect.Descriptor instead.
func (*PlaceOrderRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_orderbook_proto_rawDescGZIP(), []int{0}
}

func (x *PlaceOrderRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PlaceOrderRequest) GetSide() OrderSide {
	if x != nil {
		return x.Side
	}
	return OrderSide_ORDER_SIDE_UNSPECIFIED
}

func (x *PlaceOrderRequest) GetContractType() ContractType {
	if x != nil {
		return x.ContractType
	}
	return ContractType_CONTRACT_TYPE_UNSPECIFIED
}

func (x *PlaceOrderRequest) GetStrikeHashRate() float64 {
	if x != nil {
		return x.StrikeHashRate
	}
	return 0
}

func (x *PlaceOrderRequest) GetStartBlockHeight() int32 {
	if x != nil {
		return x.StartBlockHeight
	}
	return 0
}

func (x *PlaceOrderRequest) GetEndBlockHeight() int32 {
	if x != nil {
		return x.EndBlockHeight
	}
	return 0
}

func (x *PlaceOrderRequest) GetPrice() uint64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *PlaceOrderRequest) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *PlaceOrderRequest) GetPubkey() string {
	if x != nil {
		return x.Pubkey
	}
	return ""
}

func (x *PlaceOrderRequest) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

type PlaceOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order  *Order   `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	Trades []*Trade `protobuf:"bytes,2,rep,name=trades,proto3" json:"trades,omitempty"` // If order was matched immediately, contains the trades
}

func (x *PlaceOrderResponse) Reset() {
	*x = PlaceOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_orderbook_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaceOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceOrderResponse) ProtoMessage() {}

func (x *PlaceOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_orderbook_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceOrderResponse.ProtoReflect.Descriptor instead.
func (*PlaceOrderResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_orderbook_proto_rawDescGZIP(), []int{1}
}

func (x *PlaceOrderResponse) GetOrder() *Order {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *PlaceOrderResponse) GetTrades() []*Trade {
	if x != nil {
		return x.Trades
	}
	return nil
}

type CancelOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // For authorization
}

func (x *CancelOrderRequest) Reset() {
	*x = CancelOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_orderbook_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelOrderRequest) ProtoMessage() {}

func (x *CancelOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_orderbook_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelOrderRequest.ProtoReflect.Descriptor instead.
func (*CancelOrderRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_orderbook_proto_rawDescGZIP(), []int{2}
}

func (x *CancelOrderRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CancelOrderRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type CancelOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *CancelOrderResponse) Reset() {
	*x = CancelOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_orderbook_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelOrderResponse) ProtoMessage() {}

func (x *CancelOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_orderbook_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelOrderResponse.ProtoReflect.Descriptor instead.
func (*CancelOrderResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_orderbook_proto_rawDescGZIP(), []int{3}
}

func (x *CancelOrderResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetOrderBookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractType     ContractType `protobuf:"varint,1,opt,name=contract_type,json=contractType,proto3,enum=ark.v1.ContractType" json:"contract_type,omitempty"`
	StrikeHashRate   float64      `protobuf:"fixed64,2,opt,name=strike_hash_rate,json=strikeHashRate,proto3" json:"strike_hash_rate,omitempty"`
	StartBlockHeight int32        `protobuf:"varint,3,opt,name=start_block_height,json=startBlockHeight,proto3" json:"start_block_height,omitempty"`
	EndBlockHeight   int32        `protobuf:"varint,4,opt,name=end_block_height,json=endBlockHeight,proto3" json:"end_block_height,omitempty"`
	Limit            int32        `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"` // Limit number of entries per side
}

func (x *GetOrderBookRequest) Reset() {
	*x = GetOrderBookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_orderbook_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderBookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderBookRequest) ProtoMessage() {}

func (x *GetOrderBookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_orderbook_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderBookRequest.ProtoReflect.Descriptor instead.
func (*GetOrderBookRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_orderbook_proto_rawDescGZIP(), []int{4}
}

func (x *GetOrderBookRequest) GetContractType() ContractType {
	if x != nil {
		return x.ContractType
	}
	return ContractType_CONTRACT_TYPE_UNSPECIFIED
}

func (x *GetOrderBookRequest) GetStrikeHashRate() float64 {
	if x != nil {
		return x.StrikeHashRate
	}
	return 0
}

func (x *GetOrderBookRequest) GetStartBlockHeight() int32 {
	if x != nil {
		return x.StartBlockHeight
	}
	return 0
}

func (x *GetOrderBookRequest) GetEndBlockHeight() int32 {
	if x != nil {
		return x.EndBlockHeight
	}
	return 0
}

func (x *GetOrderBookRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetOrderBookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orderbook *OrderBook `protobuf:"bytes,1,opt,name=orderbook,proto3" json:"orderbook,omitempty"`
}

func (x *GetOrderBookResponse) Reset() {
	*x = GetOrderBookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_orderbook_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderBookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderBookResponse) ProtoMessage() {}

func (x *GetOrderBookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_orderbook_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderBookResponse.ProtoReflect.Descriptor instead.
func (*GetOrderBookResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_orderbook_proto_rawDescGZIP(), []int{5}
}

func (x *GetOrderBookResponse) GetOrderbook() *OrderBook {
	if x != nil {
		return x.Orderbook
	}
	return nil
}

type GetOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetOrderRequest) Reset() {
	*x = GetOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_orderbook_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderRequest) ProtoMessage() {}

func (x *GetOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_orderbook_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderRequest.ProtoReflect.Descriptor instead.
func (*GetOrderRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_orderbook_proto_rawDescGZIP(), []int{6}
}

func (x *GetOrderRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order *Order `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *GetOrderResponse) Reset() {
	*x = GetOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_orderbook_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderResponse) ProtoMessage() {}

func (x *GetOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_orderbook_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderResponse.ProtoReflect.Descriptor instead.
func (*GetOrderResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_orderbook_proto_rawDescGZIP(), []int{7}
}

func (x *GetOrderResponse) GetOrder() *Order {
	if x != nil {
		return x.Order
	}
	return nil
}

type ListUserOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string      `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Status OrderStatus `protobuf:"varint,2,opt,name=status,proto3,enum=ark.v1.OrderStatus" json:"status,omitempty"`
	Limit  int32       `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int32       `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *ListUserOrdersRequest) Reset() {
	*x = ListUserOrdersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_orderbook_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserOrdersRequest) ProtoMessage() {}

func (x *ListUserOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_orderbook_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserOrdersRequest.ProtoReflect.Descriptor instead.
func (*ListUserOrdersRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_orderbook_proto_rawDescGZIP(), []int{8}
}

func (x *ListUserOrdersRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListUserOrdersRequest) GetStatus() OrderStatus {
	if x != nil {
		return x.Status
	}
	return OrderStatus_ORDER_STATUS_UNSPECIFIED
}

func (x *ListUserOrdersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListUserOrdersRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ListUserOrdersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []*Order `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	Total  int32    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListUserOrdersResponse) Reset() {
	*x = ListUserOrdersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_orderbook_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUserOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUserOrdersResponse) ProtoMessage() {}

func (x *ListUserOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_orderbook_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUserOrdersResponse.ProtoReflect.Descriptor instead.
func (*ListUserOrdersResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_orderbook_proto_rawDescGZIP(), []int{9}
}

func (x *ListUserOrdersResponse) GetOrders() []*Order {
	if x != nil {
		return x.Orders
	}
	return nil
}

func (x *ListUserOrdersResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetMarketDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractType     ContractType `protobuf:"varint,1,opt,name=contract_type,json=contractType,proto3,enum=ark.v1.ContractType" json:"contract_type,omitempty"`
	StrikeHashRate   float64      `protobuf:"fixed64,2,opt,name=strike_hash_rate,json=strikeHashRate,proto3" json:"strike_hash_rate,omitempty"`
	StartBlockHeight int32        `protobuf:"varint,3,opt,name=start_block_height,json=startBlockHeight,proto3" json:"start_block_height,omitempty"`
	EndBlockHeight   int32        `protobuf:"varint,4,opt,name=end_block_height,json=endBlockHeight,proto3" json:"end_block_height,omitempty"`
}

func (x *GetMarketDataRequest) Reset() {
	*x = GetMarketDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_orderbook_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMarketDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketDataRequest) ProtoMessage() {}

func (x *GetMarketDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_orderbook_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketDataRequest.ProtoReflect.Descriptor instead.
func (*GetMarketDataRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_orderbook_proto_rawDescGZIP(), []int{10}
}

func (x *GetMarketDataRequest) GetContractType() ContractType {
	if x != nil {
		return x.ContractType
	}
	return ContractType_CONTRACT_TYPE_UNSPECIFIED
}

func (x *GetMarketDataRequest) GetStrikeHashRate() float64 {
	if x != nil {
		return x.StrikeHashRate
	}
	return 0
}

func (x *GetMarketDataRequest) GetStartBlockHeight() int32 {
	if x != nil {
		return x.StartBlockHeight
	}
	return 0
}

func (x *GetMarketDataRequest) GetEndBlockHeight() int32 {
	if x != nil {
		return x.EndBlockHeight
	}
	return 0
}

type GetMarketDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BestBid     uint64  `protobuf:"varint,1,opt,name=best_bid,json=bestBid,proto3" json:"best_bid,omitempty"`
	BestAsk     uint64  `protobuf:"varint,2,opt,name=best_ask,json=bestAsk,proto3" json:"best_ask,omitempty"`
	LastPrice   uint64  `protobuf:"varint,3,opt,name=last_price,json=lastPrice,proto3" json:"last_price,omitempty"`
	DailyVolume uint64  `protobuf:"varint,4,opt,name=daily_volume,json=dailyVolume,proto3" json:"daily_volume,omitempty"`
	DailyChange float64 `protobuf:"fixed64,5,opt,name=daily_change,json=dailyChange,proto3" json:"daily_change,omitempty"`
	Timestamp   int64   `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *GetMarketDataResponse) Reset() {
	*x = GetMarketDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_orderbook_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMarketDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketDataResponse) ProtoMessage() {}

func (x *GetMarketDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_orderbook_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketDataResponse.ProtoReflect.Descriptor instead.
func (*GetMarketDataResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_orderbook_proto_rawDescGZIP(), []int{11}
}

func (x *GetMarketDataResponse) GetBestBid() uint64 {
	if x != nil {
		return x.BestBid
	}
	return 0
}

func (x *GetMarketDataResponse) GetBestAsk() uint64 {
	if x != nil {
		return x.BestAsk
	}
	return 0
}

func (x *GetMarketDataResponse) GetLastPrice() uint64 {
	if x != nil {
		return x.LastPrice
	}
	return 0
}

func (x *GetMarketDataResponse) GetDailyVolume() uint64 {
	if x != nil {
		return x.DailyVolume
	}
	return 0
}

func (x *GetMarketDataResponse) GetDailyChange() float64 {
	if x != nil {
		return x.DailyChange
	}
	return 0
}

func (x *GetMarketDataResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type GetOrderBookEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // Optional: filter for a specific user's orders
}

func (x *GetOrderBookEventsRequest) Reset() {
	*x = GetOrderBookEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_orderbook_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderBookEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderBookEventsRequest) ProtoMessage() {}

func (x *GetOrderBookEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_orderbook_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderBookEventsRequest.ProtoReflect.Descriptor instead.
func (*GetOrderBookEventsRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_orderbook_proto_rawDescGZIP(), []int{12}
}

func (x *GetOrderBookEventsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetOrderBookEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//
	//	*GetOrderBookEventsResponse_OrderCreated
	//	*GetOrderBookEventsResponse_OrderUpdated
	//	*GetOrderBookEventsResponse_TradeExecuted
	Event isGetOrderBookEventsResponse_Event `protobuf_oneof:"event"`
}

func (x *GetOrderBookEventsResponse) Reset() {
	*x = GetOrderBookEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_orderbook_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderBookEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderBookEventsResponse) ProtoMessage() {}

func (x *GetOrderBookEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_orderbook_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderBookEventsResponse.ProtoReflect.Descriptor instead.
func (*GetOrderBookEventsResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_orderbook_proto_rawDescGZIP(), []int{13}
}

func (m *GetOrderBookEventsResponse) GetEvent() isGetOrderBookEventsResponse_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *GetOrderBookEventsResponse) GetOrderCreated() *OrderCreatedEvent {
	if x, ok := x.GetEvent().(*GetOrderBookEventsResponse_OrderCreated); ok {
		return x.OrderCreated
	}
	return nil
}

func (x *GetOrderBookEventsResponse) GetOrderUpdated() *OrderUpdatedEvent {
	if x, ok := x.GetEvent().(*GetOrderBookEventsResponse_OrderUpdated); ok {
		return x.OrderUpdated
	}
	return nil
}

func (x *GetOrderBookEventsResponse) GetTradeExecuted() *TradeExecutedEvent {
	if x, ok := x.GetEvent().(*GetOrderBookEventsResponse_TradeExecuted); ok {
		return x.TradeExecuted
	}
	return nil
}

type isGetOrderBookEventsResponse_Event interface {
	isGetOrderBookEventsResponse_Event()
}

type GetOrderBookEventsResponse_OrderCreated struct {
	OrderCreated *OrderCreatedEvent `protobuf:"bytes,1,opt,name=order_created,json=orderCreated,proto3,oneof"`
}

type GetOrderBookEventsResponse_OrderUpdated struct {
	OrderUpdated *OrderUpdatedEvent `protobuf:"bytes,2,opt,name=order_updated,json=orderUpdated,proto3,oneof"`
}

type GetOrderBookEventsResponse_TradeExecuted struct {
	TradeExecuted *TradeExecutedEvent `protobuf:"bytes,3,opt,name=trade_executed,json=tradeExecuted,proto3,oneof"`
}

func (*GetOrderBookEventsResponse_OrderCreated) isGetOrderBookEventsResponse_Event() {}

func (*GetOrderBookEventsResponse_OrderUpdated) isGetOrderBookEventsResponse_Event() {}

func (*GetOrderBookEventsResponse_TradeExecuted) isGetOrderBookEventsResponse_Event() {}

type ListTradesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractType     ContractType `protobuf:"varint,1,opt,name=contract_type,json=contractType,proto3,enum=ark.v1.ContractType" json:"contract_type,omitempty"`
	StrikeHashRate   float64      `protobuf:"fixed64,2,opt,name=strike_hash_rate,json=strikeHashRate,proto3" json:"strike_hash_rate,omitempty"`
	StartBlockHeight int32        `protobuf:"varint,3,opt,name=start_block_height,json=startBlockHeight,proto3" json:"start_block_height,omitempty"`
	EndBlockHeight   int32        `protobuf:"varint,4,opt,name=end_block_height,json=endBlockHeight,proto3" json:"end_block_height,omitempty"`
	Limit            int32        `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset           int32        `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *ListTradesRequest) Reset() {
	*x = ListTradesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_orderbook_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTradesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTradesRequest) ProtoMessage() {}

func (x *ListTradesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_orderbook_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTradesRequest.ProtoReflect.Descriptor instead.
func (*ListTradesRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_orderbook_proto_rawDescGZIP(), []int{14}
}

func (x *ListTradesRequest) GetContractType() ContractType {
	if x != nil {
		return x.ContractType
	}
	return ContractType_CONTRACT_TYPE_UNSPECIFIED
}

func (x *ListTradesRequest) GetStrikeHashRate() float64 {
	if x != nil {
		return x.StrikeHashRate
	}
	return 0
}

func (x *ListTradesRequest) GetStartBlockHeight() int32 {
	if x != nil {
		return x.StartBlockHeight
	}
	return 0
}

func (x *ListTradesRequest) GetEndBlockHeight() int32 {
	if x != nil {
		return x.EndBlockHeight
	}
	return 0
}

func (x *ListTradesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListTradesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ListTradesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trades []*Trade `protobuf:"bytes,1,rep,name=trades,proto3" json:"trades,omitempty"`
	Total  int32    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListTradesResponse) Reset() {
	*x = ListTradesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_orderbook_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTradesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTradesResponse) ProtoMessage() {}

func (x *ListTradesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_orderbook_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTradesResponse.ProtoReflect.Descriptor instead.
func (*ListTradesResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_orderbook_proto_rawDescGZIP(), []int{15}
}

func (x *ListTradesResponse) GetTrades() []*Trade {
	if x != nil {
		return x.Trades
	}
	return nil
}

func (x *ListTradesResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_ark_v1_orderbook_proto protoreflect.FileDescriptor

var file_ark_v1_orderbook_proto_rawDesc = []byte{
	0x0a, 0x16, 0x61, 0x72, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f,
	0x6f, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12,
	0x61, 0x72, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xf9, 0x02, 0x0a, 0x11, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x25, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x11, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x69,
	0x64, 0x65, 0x52, 0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x39, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x14, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x73,
	0x74, 0x72, 0x69, 0x6b, 0x65, 0x48, 0x61, 0x73, 0x68, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a,
	0x12, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x65,
	0x6e, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x65, 0x6e, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65,
	0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x22, 0x60,
	0x0a, 0x12, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x06, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x72, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x06, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73,
	0x22, 0x3d, 0x0a, 0x12, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x2f, 0x0a, 0x13, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x22, 0xe8, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x6f,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x14, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x73,
	0x74, 0x72, 0x69, 0x6b, 0x65, 0x48, 0x61, 0x73, 0x68, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a,
	0x12, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x65,
	0x6e, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x65, 0x6e, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x47, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x62, 0x6f, 0x6f, 0x6b, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x37, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x72, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x22, 0x8b, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x55,
	0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xd3, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39,
	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x72,
	0x69, 0x6b, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0e, 0x73, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x48, 0x61, 0x73, 0x68, 0x52,
	0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x65, 0x6e, 0x64,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xd0, 0x01, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x65, 0x73, 0x74, 0x5f, 0x62, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x62, 0x65, 0x73, 0x74, 0x42, 0x69, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x62, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x62, 0x65, 0x73, 0x74, 0x41, 0x73, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61,
	0x69, 0x6c, 0x79, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0b, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x34,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0xee, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x72, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x40, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61,
	0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x43, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x42, 0x07, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0xfe, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0d, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x14, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x72, 0x69, 0x6b, 0x65,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0e, 0x73, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x48, 0x61, 0x73, 0x68, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x28,
	0x0a, 0x10, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x65, 0x6e, 0x64, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x51, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x06,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61,
	0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x06, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x32, 0xfc, 0x06, 0x0a, 0x10, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x63,
	0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x61,
	0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x76, 0x31,
	0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x3a, 0x01, 0x2a, 0x12, 0x72, 0x0a, 0x0b, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x1a, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x24, 0x22, 0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f,
	0x6f, 0x6b, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x63, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x3a, 0x01, 0x2a, 0x12, 0x60, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x1b, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x12, 0x0d, 0x2f, 0x76, 0x31, 0x2f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x5f, 0x0a, 0x08, 0x47, 0x65, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18,
	0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a,
	0x12, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x7c, 0x0a, 0x0e, 0x4c, 0x69,
	0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x2e, 0x61,
	0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x72,
	0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x25, 0x12, 0x23, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f,
	0x6f, 0x6b, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x6e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x2e, 0x61, 0x72, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18,
	0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2f, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x64, 0x61, 0x74, 0x61, 0x12, 0x7b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x21,
	0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x6f, 0x6f, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f,
	0x76, 0x31, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x2f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x30, 0x01, 0x12, 0x61, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x62, 0x6f, 0x6f,
	0x6b, 0x2f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x42, 0xa7, 0x01, 0x5a, 0x3d, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x72, 0x6b, 0x2d, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x72, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2d, 0x73, 0x70, 0x65, 0x63,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x61, 0x72,
	0x6b, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x72, 0x6b, 0x76, 0x31, 0x92, 0x41, 0x65, 0x12, 0x3b, 0x0a,
	0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x20, 0x41, 0x50, 0x49, 0x12, 0x25,
	0x41, 0x50, 0x49, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x68, 0x61, 0x73, 0x68, 0x72, 0x61, 0x74, 0x65,
	0x20, 0x64, 0x65, 0x72, 0x69, 0x76, 0x61, 0x74, 0x69, 0x76, 0x65, 0x20, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x62, 0x6f, 0x6f, 0x6b, 0x32, 0x03, 0x31, 0x2e, 0x30, 0x2a, 0x02, 0x01, 0x02, 0x32, 0x10,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e,
	0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73,
	0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ark_v1_orderbook_proto_rawDescOnce sync.Once
	file_ark_v1_orderbook_proto_rawDescData = file_ark_v1_orderbook_proto_rawDesc
)

func file_ark_v1_orderbook_proto_rawDescGZIP() []byte {
	file_ark_v1_orderbook_proto_rawDescOnce.Do(func() {
		file_ark_v1_orderbook_proto_rawDescData = protoimpl.X.CompressGZIP(file_ark_v1_orderbook_proto_rawDescData)
	})
	return file_ark_v1_orderbook_proto_rawDescData
}

var file_ark_v1_orderbook_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_ark_v1_orderbook_proto_goTypes = []interface{}{
	(*PlaceOrderRequest)(nil),          // 0: ark.v1.PlaceOrderRequest
	(*PlaceOrderResponse)(nil),         // 1: ark.v1.PlaceOrderResponse
	(*CancelOrderRequest)(nil),         // 2: ark.v1.CancelOrderRequest
	(*CancelOrderResponse)(nil),        // 3: ark.v1.CancelOrderResponse
	(*GetOrderBookRequest)(nil),        // 4: ark.v1.GetOrderBookRequest
	(*GetOrderBookResponse)(nil),       // 5: ark.v1.GetOrderBookResponse
	(*GetOrderRequest)(nil),            // 6: ark.v1.GetOrderRequest
	(*GetOrderResponse)(nil),           // 7: ark.v1.GetOrderResponse
	(*ListUserOrdersRequest)(nil),      // 8: ark.v1.ListUserOrdersRequest
	(*ListUserOrdersResponse)(nil),     // 9: ark.v1.ListUserOrdersResponse
	(*GetMarketDataRequest)(nil),       // 10: ark.v1.GetMarketDataRequest
	(*GetMarketDataResponse)(nil),      // 11: ark.v1.GetMarketDataResponse
	(*GetOrderBookEventsRequest)(nil),  // 12: ark.v1.GetOrderBookEventsRequest
	(*GetOrderBookEventsResponse)(nil), // 13: ark.v1.GetOrderBookEventsResponse
	(*ListTradesRequest)(nil),          // 14: ark.v1.ListTradesRequest
	(*ListTradesResponse)(nil),         // 15: ark.v1.ListTradesResponse
	(OrderSide)(0),                     // 16: ark.v1.OrderSide
	(ContractType)(0),                  // 17: ark.v1.ContractType
	(*Order)(nil),                      // 18: ark.v1.Order
	(*Trade)(nil),                      // 19: ark.v1.Trade
	(*OrderBook)(nil),                  // 20: ark.v1.OrderBook
	(OrderStatus)(0),                   // 21: ark.v1.OrderStatus
	(*OrderCreatedEvent)(nil),          // 22: ark.v1.OrderCreatedEvent
	(*OrderUpdatedEvent)(nil),          // 23: ark.v1.OrderUpdatedEvent
	(*TradeExecutedEvent)(nil),         // 24: ark.v1.TradeExecutedEvent
}
var file_ark_v1_orderbook_proto_depIdxs = []int32{
	16, // 0: ark.v1.PlaceOrderRequest.side:type_name -> ark.v1.OrderSide
	17, // 1: ark.v1.PlaceOrderRequest.contract_type:type_name -> ark.v1.ContractType
	18, // 2: ark.v1.PlaceOrderResponse.order:type_name -> ark.v1.Order
	19, // 3: ark.v1.PlaceOrderResponse.trades:type_name -> ark.v1.Trade
	17, // 4: ark.v1.GetOrderBookRequest.contract_type:type_name -> ark.v1.ContractType
	20, // 5: ark.v1.GetOrderBookResponse.orderbook:type_name -> ark.v1.OrderBook
	18, // 6: ark.v1.GetOrderResponse.order:type_name -> ark.v1.Order
	21, // 7: ark.v1.ListUserOrdersRequest.status:type_name -> ark.v1.OrderStatus
	18, // 8: ark.v1.ListUserOrdersResponse.orders:type_name -> ark.v1.Order
	17, // 9: ark.v1.GetMarketDataRequest.contract_type:type_name -> ark.v1.ContractType
	22, // 10: ark.v1.GetOrderBookEventsResponse.order_created:type_name -> ark.v1.OrderCreatedEvent
	23, // 11: ark.v1.GetOrderBookEventsResponse.order_updated:type_name -> ark.v1.OrderUpdatedEvent
	24, // 12: ark.v1.GetOrderBookEventsResponse.trade_executed:type_name -> ark.v1.TradeExecutedEvent
	17, // 13: ark.v1.ListTradesRequest.contract_type:type_name -> ark.v1.ContractType
	19, // 14: ark.v1.ListTradesResponse.trades:type_name -> ark.v1.Trade
	0,  // 15: ark.v1.OrderBookService.PlaceOrder:input_type -> ark.v1.PlaceOrderRequest
	2,  // 16: ark.v1.OrderBookService.CancelOrder:input_type -> ark.v1.CancelOrderRequest
	4,  // 17: ark.v1.OrderBookService.GetOrderBook:input_type -> ark.v1.GetOrderBookRequest
	6,  // 18: ark.v1.OrderBookService.GetOrder:input_type -> ark.v1.GetOrderRequest
	8,  // 19: ark.v1.OrderBookService.ListUserOrders:input_type -> ark.v1.ListUserOrdersRequest
	10, // 20: ark.v1.OrderBookService.GetMarketData:input_type -> ark.v1.GetMarketDataRequest
	12, // 21: ark.v1.OrderBookService.GetOrderBookEvents:input_type -> ark.v1.GetOrderBookEventsRequest
	14, // 22: ark.v1.OrderBookService.ListTrades:input_type -> ark.v1.ListTradesRequest
	1,  // 23: ark.v1.OrderBookService.PlaceOrder:output_type -> ark.v1.PlaceOrderResponse
	3,  // 24: ark.v1.OrderBookService.CancelOrder:output_type -> ark.v1.CancelOrderResponse
	5,  // 25: ark.v1.OrderBookService.GetOrderBook:output_type -> ark.v1.GetOrderBookResponse
	7,  // 26: ark.v1.OrderBookService.GetOrder:output_type -> ark.v1.GetOrderResponse
	9,  // 27: ark.v1.OrderBookService.ListUserOrders:output_type -> ark.v1.ListUserOrdersResponse
	11, // 28: ark.v1.OrderBookService.GetMarketData:output_type -> ark.v1.GetMarketDataResponse
	13, // 29: ark.v1.OrderBookService.GetOrderBookEvents:output_type -> ark.v1.GetOrderBookEventsResponse
	15, // 30: ark.v1.OrderBookService.ListTrades:output_type -> ark.v1.ListTradesResponse
	23, // [23:31] is the sub-list for method output_type
	15, // [15:23] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_ark_v1_orderbook_proto_init() }
func file_ark_v1_orderbook_proto_init() {
	if File_ark_v1_orderbook_proto != nil {
		return
	}
	file_ark_v1_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ark_v1_orderbook_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaceOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_orderbook_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaceOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_orderbook_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_orderbook_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_orderbook_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderBookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_orderbook_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderBookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_orderbook_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_orderbook_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_orderbook_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserOrdersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_orderbook_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUserOrdersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_orderbook_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMarketDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_orderbook_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMarketDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_orderbook_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderBookEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_orderbook_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderBookEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_orderbook_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTradesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_orderbook_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTradesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ark_v1_orderbook_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*GetOrderBookEventsResponse_OrderCreated)(nil),
		(*GetOrderBookEventsResponse_OrderUpdated)(nil),
		(*GetOrderBookEventsResponse_TradeExecuted)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ark_v1_orderbook_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ark_v1_orderbook_proto_goTypes,
		DependencyIndexes: file_ark_v1_orderbook_proto_depIdxs,
		MessageInfos:      file_ark_v1_orderbook_proto_msgTypes,
	}.Build()
	File_ark_v1_orderbook_proto = out.File
	file_ark_v1_orderbook_proto_rawDesc = nil
	file_ark_v1_orderbook_proto_goTypes = nil
	file_ark_v1_orderbook_proto_depIdxs = nil
}
