// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.12
// source: ark/v1/types.proto

package arkv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Rounds and Related Types
type RoundStage int32

const (
	RoundStage_ROUND_STAGE_UNSPECIFIED  RoundStage = 0
	RoundStage_ROUND_STAGE_REGISTRATION RoundStage = 1
	RoundStage_ROUND_STAGE_FINALIZATION RoundStage = 2
	RoundStage_ROUND_STAGE_FINALIZED    RoundStage = 3
	RoundStage_ROUND_STAGE_FAILED       RoundStage = 4
)

// Enum value maps for RoundStage.
var (
	RoundStage_name = map[int32]string{
		0: "ROUND_STAGE_UNSPECIFIED",
		1: "ROUND_STAGE_REGISTRATION",
		2: "ROUND_STAGE_FINALIZATION",
		3: "ROUND_STAGE_FINALIZED",
		4: "ROUND_STAGE_FAILED",
	}
	RoundStage_value = map[string]int32{
		"ROUND_STAGE_UNSPECIFIED":  0,
		"ROUND_STAGE_REGISTRATION": 1,
		"ROUND_STAGE_FINALIZATION": 2,
		"ROUND_STAGE_FINALIZED":    3,
		"ROUND_STAGE_FAILED":       4,
	}
)

func (x RoundStage) Enum() *RoundStage {
	p := new(RoundStage)
	*p = x
	return p
}

func (x RoundStage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoundStage) Descriptor() protoreflect.EnumDescriptor {
	return file_ark_v1_types_proto_enumTypes[0].Descriptor()
}

func (RoundStage) Type() protoreflect.EnumType {
	return &file_ark_v1_types_proto_enumTypes[0]
}

func (x RoundStage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoundStage.Descriptor instead.
func (RoundStage) EnumDescriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{0}
}

// Hashrate Derivatives Types
type ContractType int32

const (
	ContractType_CONTRACT_TYPE_UNSPECIFIED ContractType = 0
	ContractType_CONTRACT_TYPE_CALL        ContractType = 1
	ContractType_CONTRACT_TYPE_PUT         ContractType = 2
)

// Enum value maps for ContractType.
var (
	ContractType_name = map[int32]string{
		0: "CONTRACT_TYPE_UNSPECIFIED",
		1: "CONTRACT_TYPE_CALL",
		2: "CONTRACT_TYPE_PUT",
	}
	ContractType_value = map[string]int32{
		"CONTRACT_TYPE_UNSPECIFIED": 0,
		"CONTRACT_TYPE_CALL":        1,
		"CONTRACT_TYPE_PUT":         2,
	}
)

func (x ContractType) Enum() *ContractType {
	p := new(ContractType)
	*p = x
	return p
}

func (x ContractType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContractType) Descriptor() protoreflect.EnumDescriptor {
	return file_ark_v1_types_proto_enumTypes[1].Descriptor()
}

func (ContractType) Type() protoreflect.EnumType {
	return &file_ark_v1_types_proto_enumTypes[1]
}

func (x ContractType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContractType.Descriptor instead.
func (ContractType) EnumDescriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{1}
}

type ContractStatus int32

const (
	ContractStatus_CONTRACT_STATUS_UNSPECIFIED ContractStatus = 0
	ContractStatus_CONTRACT_STATUS_CREATED     ContractStatus = 1
	ContractStatus_CONTRACT_STATUS_SETUP       ContractStatus = 2
	ContractStatus_CONTRACT_STATUS_ACTIVE      ContractStatus = 3
	ContractStatus_CONTRACT_STATUS_SETTLED     ContractStatus = 4
	ContractStatus_CONTRACT_STATUS_EXPIRED     ContractStatus = 5
	ContractStatus_CONTRACT_STATUS_FAILED      ContractStatus = 6
)

// Enum value maps for ContractStatus.
var (
	ContractStatus_name = map[int32]string{
		0: "CONTRACT_STATUS_UNSPECIFIED",
		1: "CONTRACT_STATUS_CREATED",
		2: "CONTRACT_STATUS_SETUP",
		3: "CONTRACT_STATUS_ACTIVE",
		4: "CONTRACT_STATUS_SETTLED",
		5: "CONTRACT_STATUS_EXPIRED",
		6: "CONTRACT_STATUS_FAILED",
	}
	ContractStatus_value = map[string]int32{
		"CONTRACT_STATUS_UNSPECIFIED": 0,
		"CONTRACT_STATUS_CREATED":     1,
		"CONTRACT_STATUS_SETUP":       2,
		"CONTRACT_STATUS_ACTIVE":      3,
		"CONTRACT_STATUS_SETTLED":     4,
		"CONTRACT_STATUS_EXPIRED":     5,
		"CONTRACT_STATUS_FAILED":      6,
	}
)

func (x ContractStatus) Enum() *ContractStatus {
	p := new(ContractStatus)
	*p = x
	return p
}

func (x ContractStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContractStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_ark_v1_types_proto_enumTypes[2].Descriptor()
}

func (ContractStatus) Type() protoreflect.EnumType {
	return &file_ark_v1_types_proto_enumTypes[2]
}

func (x ContractStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContractStatus.Descriptor instead.
func (ContractStatus) EnumDescriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{2}
}

// Order and Trade Types
type OrderSide int32

const (
	OrderSide_ORDER_SIDE_UNSPECIFIED OrderSide = 0
	OrderSide_ORDER_SIDE_BUY         OrderSide = 1
	OrderSide_ORDER_SIDE_SELL        OrderSide = 2
)

// Enum value maps for OrderSide.
var (
	OrderSide_name = map[int32]string{
		0: "ORDER_SIDE_UNSPECIFIED",
		1: "ORDER_SIDE_BUY",
		2: "ORDER_SIDE_SELL",
	}
	OrderSide_value = map[string]int32{
		"ORDER_SIDE_UNSPECIFIED": 0,
		"ORDER_SIDE_BUY":         1,
		"ORDER_SIDE_SELL":        2,
	}
)

func (x OrderSide) Enum() *OrderSide {
	p := new(OrderSide)
	*p = x
	return p
}

func (x OrderSide) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderSide) Descriptor() protoreflect.EnumDescriptor {
	return file_ark_v1_types_proto_enumTypes[3].Descriptor()
}

func (OrderSide) Type() protoreflect.EnumType {
	return &file_ark_v1_types_proto_enumTypes[3]
}

func (x OrderSide) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderSide.Descriptor instead.
func (OrderSide) EnumDescriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{3}
}

type OrderStatus int32

const (
	OrderStatus_ORDER_STATUS_UNSPECIFIED OrderStatus = 0
	OrderStatus_ORDER_STATUS_OPEN        OrderStatus = 1
	OrderStatus_ORDER_STATUS_PARTIAL     OrderStatus = 2
	OrderStatus_ORDER_STATUS_FILLED      OrderStatus = 3
	OrderStatus_ORDER_STATUS_CANCELED    OrderStatus = 4
	OrderStatus_ORDER_STATUS_EXPIRED     OrderStatus = 5
)

// Enum value maps for OrderStatus.
var (
	OrderStatus_name = map[int32]string{
		0: "ORDER_STATUS_UNSPECIFIED",
		1: "ORDER_STATUS_OPEN",
		2: "ORDER_STATUS_PARTIAL",
		3: "ORDER_STATUS_FILLED",
		4: "ORDER_STATUS_CANCELED",
		5: "ORDER_STATUS_EXPIRED",
	}
	OrderStatus_value = map[string]int32{
		"ORDER_STATUS_UNSPECIFIED": 0,
		"ORDER_STATUS_OPEN":        1,
		"ORDER_STATUS_PARTIAL":     2,
		"ORDER_STATUS_FILLED":      3,
		"ORDER_STATUS_CANCELED":    4,
		"ORDER_STATUS_EXPIRED":     5,
	}
)

func (x OrderStatus) Enum() *OrderStatus {
	p := new(OrderStatus)
	*p = x
	return p
}

func (x OrderStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_ark_v1_types_proto_enumTypes[4].Descriptor()
}

func (OrderStatus) Type() protoreflect.EnumType {
	return &file_ark_v1_types_proto_enumTypes[4]
}

func (x OrderStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderStatus.Descriptor instead.
func (OrderStatus) EnumDescriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{4}
}

type Round struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Start      int64      `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	End        int64      `protobuf:"varint,3,opt,name=end,proto3" json:"end,omitempty"`
	RoundTx    string     `protobuf:"bytes,4,opt,name=round_tx,json=roundTx,proto3" json:"round_tx,omitempty"`
	VtxoTree   *Tree      `protobuf:"bytes,5,opt,name=vtxo_tree,json=vtxoTree,proto3" json:"vtxo_tree,omitempty"`
	ForfeitTxs []string   `protobuf:"bytes,6,rep,name=forfeit_txs,json=forfeitTxs,proto3" json:"forfeit_txs,omitempty"`
	Connectors *Tree      `protobuf:"bytes,7,opt,name=connectors,proto3" json:"connectors,omitempty"`
	Stage      RoundStage `protobuf:"varint,8,opt,name=stage,proto3,enum=ark.v1.RoundStage" json:"stage,omitempty"`
}

func (x *Round) Reset() {
	*x = Round{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Round) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Round) ProtoMessage() {}

func (x *Round) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Round.ProtoReflect.Descriptor instead.
func (*Round) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{0}
}

func (x *Round) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Round) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *Round) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *Round) GetRoundTx() string {
	if x != nil {
		return x.RoundTx
	}
	return ""
}

func (x *Round) GetVtxoTree() *Tree {
	if x != nil {
		return x.VtxoTree
	}
	return nil
}

func (x *Round) GetForfeitTxs() []string {
	if x != nil {
		return x.ForfeitTxs
	}
	return nil
}

func (x *Round) GetConnectors() *Tree {
	if x != nil {
		return x.Connectors
	}
	return nil
}

func (x *Round) GetStage() RoundStage {
	if x != nil {
		return x.Stage
	}
	return RoundStage_ROUND_STAGE_UNSPECIFIED
}

type Outpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid string `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Vout uint32 `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
}

func (x *Outpoint) Reset() {
	*x = Outpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Outpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Outpoint) ProtoMessage() {}

func (x *Outpoint) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Outpoint.ProtoReflect.Descriptor instead.
func (*Outpoint) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{1}
}

func (x *Outpoint) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *Outpoint) GetVout() uint32 {
	if x != nil {
		return x.Vout
	}
	return 0
}

type Input struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Outpoint *Outpoint `protobuf:"bytes,1,opt,name=outpoint,proto3" json:"outpoint,omitempty"`
	// Types that are assignable to TaprootTree:
	//
	//	*Input_Descriptor_
	//	*Input_Tapscripts
	TaprootTree isInput_TaprootTree `protobuf_oneof:"taproot_tree"`
}

func (x *Input) Reset() {
	*x = Input{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Input) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Input) ProtoMessage() {}

func (x *Input) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Input.ProtoReflect.Descriptor instead.
func (*Input) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{2}
}

func (x *Input) GetOutpoint() *Outpoint {
	if x != nil {
		return x.Outpoint
	}
	return nil
}

func (m *Input) GetTaprootTree() isInput_TaprootTree {
	if m != nil {
		return m.TaprootTree
	}
	return nil
}

func (x *Input) GetDescriptor_() string {
	if x, ok := x.GetTaprootTree().(*Input_Descriptor_); ok {
		return x.Descriptor_
	}
	return ""
}

func (x *Input) GetTapscripts() *Tapscripts {
	if x, ok := x.GetTaprootTree().(*Input_Tapscripts); ok {
		return x.Tapscripts
	}
	return nil
}

type isInput_TaprootTree interface {
	isInput_TaprootTree()
}

type Input_Descriptor_ struct {
	Descriptor_ string `protobuf:"bytes,2,opt,name=descriptor,proto3,oneof"`
}

type Input_Tapscripts struct {
	Tapscripts *Tapscripts `protobuf:"bytes,3,opt,name=tapscripts,proto3,oneof"`
}

func (*Input_Descriptor_) isInput_TaprootTree() {}

func (*Input_Tapscripts) isInput_TaprootTree() {}

type Output struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"` // onchain or off-chain
	Amount  uint64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`  // Amount in satoshis
	Script  string `protobuf:"bytes,3,opt,name=Script,proto3" json:"Script,omitempty"`
}

func (x *Output) Reset() {
	*x = Output{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Output) ProtoMessage() {}

func (x *Output) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Output.ProtoReflect.Descriptor instead.
func (*Output) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{3}
}

func (x *Output) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Output) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Output) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

type Tree struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Levels []*TreeLevel `protobuf:"bytes,1,rep,name=levels,proto3" json:"levels,omitempty"`
}

func (x *Tree) Reset() {
	*x = Tree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tree) ProtoMessage() {}

func (x *Tree) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tree.ProtoReflect.Descriptor instead.
func (*Tree) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{4}
}

func (x *Tree) GetLevels() []*TreeLevel {
	if x != nil {
		return x.Levels
	}
	return nil
}

type TreeLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*Node `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *TreeLevel) Reset() {
	*x = TreeLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TreeLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreeLevel) ProtoMessage() {}

func (x *TreeLevel) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreeLevel.ProtoReflect.Descriptor instead.
func (*TreeLevel) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{5}
}

func (x *TreeLevel) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid       string `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Tx         string `protobuf:"bytes,2,opt,name=tx,proto3" json:"tx,omitempty"`
	ParentTxid string `protobuf:"bytes,3,opt,name=parent_txid,json=parentTxid,proto3" json:"parent_txid,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{6}
}

func (x *Node) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *Node) GetTx() string {
	if x != nil {
		return x.Tx
	}
	return ""
}

func (x *Node) GetParentTxid() string {
	if x != nil {
		return x.ParentTxid
	}
	return ""
}

type Vtxo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Outpoint  *Outpoint `protobuf:"bytes,1,opt,name=outpoint,proto3" json:"outpoint,omitempty"`
	Spent     bool      `protobuf:"varint,2,opt,name=spent,proto3" json:"spent,omitempty"`
	RoundTxid string    `protobuf:"bytes,3,opt,name=round_txid,json=roundTxid,proto3" json:"round_txid,omitempty"`
	SpentBy   string    `protobuf:"bytes,4,opt,name=spent_by,json=spentBy,proto3" json:"spent_by,omitempty"`
	ExpireAt  int64     `protobuf:"varint,5,opt,name=expire_at,json=expireAt,proto3" json:"expire_at,omitempty"`
	Swept     bool      `protobuf:"varint,6,opt,name=swept,proto3" json:"swept,omitempty"`
	IsPending bool      `protobuf:"varint,7,opt,name=is_pending,json=isPending,proto3" json:"is_pending,omitempty"`
	RedeemTx  string    `protobuf:"bytes,8,opt,name=redeem_tx,json=redeemTx,proto3" json:"redeem_tx,omitempty"`
	Amount    uint64    `protobuf:"varint,9,opt,name=amount,proto3" json:"amount,omitempty"`
	Pubkey    string    `protobuf:"bytes,10,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	CreatedAt int64     `protobuf:"varint,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Vtxo) Reset() {
	*x = Vtxo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vtxo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vtxo) ProtoMessage() {}

func (x *Vtxo) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vtxo.ProtoReflect.Descriptor instead.
func (*Vtxo) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{7}
}

func (x *Vtxo) GetOutpoint() *Outpoint {
	if x != nil {
		return x.Outpoint
	}
	return nil
}

func (x *Vtxo) GetSpent() bool {
	if x != nil {
		return x.Spent
	}
	return false
}

func (x *Vtxo) GetRoundTxid() string {
	if x != nil {
		return x.RoundTxid
	}
	return ""
}

func (x *Vtxo) GetSpentBy() string {
	if x != nil {
		return x.SpentBy
	}
	return ""
}

func (x *Vtxo) GetExpireAt() int64 {
	if x != nil {
		return x.ExpireAt
	}
	return 0
}

func (x *Vtxo) GetSwept() bool {
	if x != nil {
		return x.Swept
	}
	return false
}

func (x *Vtxo) GetIsPending() bool {
	if x != nil {
		return x.IsPending
	}
	return false
}

func (x *Vtxo) GetRedeemTx() string {
	if x != nil {
		return x.RedeemTx
	}
	return ""
}

func (x *Vtxo) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Vtxo) GetPubkey() string {
	if x != nil {
		return x.Pubkey
	}
	return ""
}

func (x *Vtxo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type RoundTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid                 string      `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	SpentVtxos           []*Vtxo     `protobuf:"bytes,2,rep,name=spent_vtxos,json=spentVtxos,proto3" json:"spent_vtxos,omitempty"`
	SpendableVtxos       []*Vtxo     `protobuf:"bytes,3,rep,name=spendable_vtxos,json=spendableVtxos,proto3" json:"spendable_vtxos,omitempty"`
	ClaimedBoardingUtxos []*Outpoint `protobuf:"bytes,4,rep,name=claimed_boarding_utxos,json=claimedBoardingUtxos,proto3" json:"claimed_boarding_utxos,omitempty"`
}

func (x *RoundTransaction) Reset() {
	*x = RoundTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoundTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoundTransaction) ProtoMessage() {}

func (x *RoundTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoundTransaction.ProtoReflect.Descriptor instead.
func (*RoundTransaction) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{8}
}

func (x *RoundTransaction) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *RoundTransaction) GetSpentVtxos() []*Vtxo {
	if x != nil {
		return x.SpentVtxos
	}
	return nil
}

func (x *RoundTransaction) GetSpendableVtxos() []*Vtxo {
	if x != nil {
		return x.SpendableVtxos
	}
	return nil
}

func (x *RoundTransaction) GetClaimedBoardingUtxos() []*Outpoint {
	if x != nil {
		return x.ClaimedBoardingUtxos
	}
	return nil
}

type RedeemTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid           string  `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	SpentVtxos     []*Vtxo `protobuf:"bytes,2,rep,name=spent_vtxos,json=spentVtxos,proto3" json:"spent_vtxos,omitempty"`
	SpendableVtxos []*Vtxo `protobuf:"bytes,3,rep,name=spendable_vtxos,json=spendableVtxos,proto3" json:"spendable_vtxos,omitempty"`
}

func (x *RedeemTransaction) Reset() {
	*x = RedeemTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedeemTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedeemTransaction) ProtoMessage() {}

func (x *RedeemTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedeemTransaction.ProtoReflect.Descriptor instead.
func (*RedeemTransaction) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{9}
}

func (x *RedeemTransaction) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *RedeemTransaction) GetSpentVtxos() []*Vtxo {
	if x != nil {
		return x.SpentVtxos
	}
	return nil
}

func (x *RedeemTransaction) GetSpendableVtxos() []*Vtxo {
	if x != nil {
		return x.SpendableVtxos
	}
	return nil
}

// Proves control of a VTXO without revealing the entire taproot tree.
type OwnershipProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControlBlock string `protobuf:"bytes,1,opt,name=control_block,json=controlBlock,proto3" json:"control_block,omitempty"`
	Script       string `protobuf:"bytes,2,opt,name=script,proto3" json:"script,omitempty"`
	Signature    string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *OwnershipProof) Reset() {
	*x = OwnershipProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OwnershipProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OwnershipProof) ProtoMessage() {}

func (x *OwnershipProof) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OwnershipProof.ProtoReflect.Descriptor instead.
func (*OwnershipProof) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{10}
}

func (x *OwnershipProof) GetControlBlock() string {
	if x != nil {
		return x.ControlBlock
	}
	return ""
}

func (x *OwnershipProof) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

func (x *OwnershipProof) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type SignedVtxoOutpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Outpoint *Outpoint       `protobuf:"bytes,1,opt,name=outpoint,proto3" json:"outpoint,omitempty"`
	Proof    *OwnershipProof `protobuf:"bytes,2,opt,name=proof,proto3" json:"proof,omitempty"`
}

func (x *SignedVtxoOutpoint) Reset() {
	*x = SignedVtxoOutpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignedVtxoOutpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedVtxoOutpoint) ProtoMessage() {}

func (x *SignedVtxoOutpoint) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedVtxoOutpoint.ProtoReflect.Descriptor instead.
func (*SignedVtxoOutpoint) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{11}
}

func (x *SignedVtxoOutpoint) GetOutpoint() *Outpoint {
	if x != nil {
		return x.Outpoint
	}
	return nil
}

func (x *SignedVtxoOutpoint) GetProof() *OwnershipProof {
	if x != nil {
		return x.Proof
	}
	return nil
}

type Tapscripts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scripts []string `protobuf:"bytes,1,rep,name=scripts,proto3" json:"scripts,omitempty"`
}

func (x *Tapscripts) Reset() {
	*x = Tapscripts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tapscripts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tapscripts) ProtoMessage() {}

func (x *Tapscripts) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tapscripts.ProtoReflect.Descriptor instead.
func (*Tapscripts) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{12}
}

func (x *Tapscripts) GetScripts() []string {
	if x != nil {
		return x.Scripts
	}
	return nil
}

type MarketHour struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextStartTime int64 `protobuf:"varint,1,opt,name=next_start_time,json=nextStartTime,proto3" json:"next_start_time,omitempty"`
	NextEndTime   int64 `protobuf:"varint,2,opt,name=next_end_time,json=nextEndTime,proto3" json:"next_end_time,omitempty"`
	Period        int64 `protobuf:"varint,3,opt,name=period,proto3" json:"period,omitempty"`
	RoundInterval int64 `protobuf:"varint,4,opt,name=round_interval,json=roundInterval,proto3" json:"round_interval,omitempty"`
}

func (x *MarketHour) Reset() {
	*x = MarketHour{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketHour) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketHour) ProtoMessage() {}

func (x *MarketHour) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketHour.ProtoReflect.Descriptor instead.
func (*MarketHour) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{13}
}

func (x *MarketHour) GetNextStartTime() int64 {
	if x != nil {
		return x.NextStartTime
	}
	return 0
}

func (x *MarketHour) GetNextEndTime() int64 {
	if x != nil {
		return x.NextEndTime
	}
	return 0
}

func (x *MarketHour) GetPeriod() int64 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *MarketHour) GetRoundInterval() int64 {
	if x != nil {
		return x.RoundInterval
	}
	return 0
}

type SweepableOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid        string `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Vout        uint32 `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
	Amount      string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	ScheduledAt int64  `protobuf:"varint,4,opt,name=scheduled_at,json=scheduledAt,proto3" json:"scheduled_at,omitempty"`
}

func (x *SweepableOutput) Reset() {
	*x = SweepableOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SweepableOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SweepableOutput) ProtoMessage() {}

func (x *SweepableOutput) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SweepableOutput.ProtoReflect.Descriptor instead.
func (*SweepableOutput) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{14}
}

func (x *SweepableOutput) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *SweepableOutput) GetVout() uint32 {
	if x != nil {
		return x.Vout
	}
	return 0
}

func (x *SweepableOutput) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *SweepableOutput) GetScheduledAt() int64 {
	if x != nil {
		return x.ScheduledAt
	}
	return 0
}

type ScheduledSweep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoundId string             `protobuf:"bytes,1,opt,name=round_id,json=roundId,proto3" json:"round_id,omitempty"`
	Outputs []*SweepableOutput `protobuf:"bytes,2,rep,name=outputs,proto3" json:"outputs,omitempty"`
}

func (x *ScheduledSweep) Reset() {
	*x = ScheduledSweep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScheduledSweep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduledSweep) ProtoMessage() {}

func (x *ScheduledSweep) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduledSweep.ProtoReflect.Descriptor instead.
func (*ScheduledSweep) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{15}
}

func (x *ScheduledSweep) GetRoundId() string {
	if x != nil {
		return x.RoundId
	}
	return ""
}

func (x *ScheduledSweep) GetOutputs() []*SweepableOutput {
	if x != nil {
		return x.Outputs
	}
	return nil
}

type TxRequestInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt           int64           `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Receivers           []*Output       `protobuf:"bytes,3,rep,name=receivers,proto3" json:"receivers,omitempty"`
	Inputs              []*RequestInput `protobuf:"bytes,4,rep,name=inputs,proto3" json:"inputs,omitempty"`
	BoardingInputs      []*RequestInput `protobuf:"bytes,5,rep,name=boarding_inputs,json=boardingInputs,proto3" json:"boarding_inputs,omitempty"`
	Notes               []string        `protobuf:"bytes,6,rep,name=notes,proto3" json:"notes,omitempty"`
	SigningType         string          `protobuf:"bytes,7,opt,name=signing_type,json=signingType,proto3" json:"signing_type,omitempty"`
	CosignersPublicKeys []string        `protobuf:"bytes,8,rep,name=cosigners_public_keys,json=cosignersPublicKeys,proto3" json:"cosigners_public_keys,omitempty"`
	LastPing            int64           `protobuf:"varint,9,opt,name=last_ping,json=lastPing,proto3" json:"last_ping,omitempty"`
}

func (x *TxRequestInfo) Reset() {
	*x = TxRequestInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxRequestInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxRequestInfo) ProtoMessage() {}

func (x *TxRequestInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxRequestInfo.ProtoReflect.Descriptor instead.
func (*TxRequestInfo) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{16}
}

func (x *TxRequestInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TxRequestInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *TxRequestInfo) GetReceivers() []*Output {
	if x != nil {
		return x.Receivers
	}
	return nil
}

func (x *TxRequestInfo) GetInputs() []*RequestInput {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *TxRequestInfo) GetBoardingInputs() []*RequestInput {
	if x != nil {
		return x.BoardingInputs
	}
	return nil
}

func (x *TxRequestInfo) GetNotes() []string {
	if x != nil {
		return x.Notes
	}
	return nil
}

func (x *TxRequestInfo) GetSigningType() string {
	if x != nil {
		return x.SigningType
	}
	return ""
}

func (x *TxRequestInfo) GetCosignersPublicKeys() []string {
	if x != nil {
		return x.CosignersPublicKeys
	}
	return nil
}

func (x *TxRequestInfo) GetLastPing() int64 {
	if x != nil {
		return x.LastPing
	}
	return 0
}

type RequestInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid   string `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Vout   uint32 `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
	Amount uint64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *RequestInput) Reset() {
	*x = RequestInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestInput) ProtoMessage() {}

func (x *RequestInput) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestInput.ProtoReflect.Descriptor instead.
func (*RequestInput) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{17}
}

func (x *RequestInput) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *RequestInput) GetVout() uint32 {
	if x != nil {
		return x.Vout
	}
	return 0
}

func (x *RequestInput) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type HashRateContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ContractType     ContractType   `protobuf:"varint,2,opt,name=contract_type,json=contractType,proto3,enum=ark.v1.ContractType" json:"contract_type,omitempty"`
	StrikeHashRate   float64        `protobuf:"fixed64,3,opt,name=strike_hash_rate,json=strikeHashRate,proto3" json:"strike_hash_rate,omitempty"`
	StartBlockHeight int32          `protobuf:"varint,4,opt,name=start_block_height,json=startBlockHeight,proto3" json:"start_block_height,omitempty"`
	EndBlockHeight   int32          `protobuf:"varint,5,opt,name=end_block_height,json=endBlockHeight,proto3" json:"end_block_height,omitempty"`
	TargetTimestamp  int64          `protobuf:"varint,6,opt,name=target_timestamp,json=targetTimestamp,proto3" json:"target_timestamp,omitempty"`
	ContractSize     uint64         `protobuf:"varint,7,opt,name=contract_size,json=contractSize,proto3" json:"contract_size,omitempty"`
	Premium          uint64         `protobuf:"varint,8,opt,name=premium,proto3" json:"premium,omitempty"`
	BuyerPubkey      string         `protobuf:"bytes,9,opt,name=buyer_pubkey,json=buyerPubkey,proto3" json:"buyer_pubkey,omitempty"`
	SellerPubkey     string         `protobuf:"bytes,10,opt,name=seller_pubkey,json=sellerPubkey,proto3" json:"seller_pubkey,omitempty"`
	Status           ContractStatus `protobuf:"varint,11,opt,name=status,proto3,enum=ark.v1.ContractStatus" json:"status,omitempty"`
	CreatedAt        int64          `protobuf:"varint,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        int64          `protobuf:"varint,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	ExpiresAt        int64          `protobuf:"varint,14,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	SetupTxid        string         `protobuf:"bytes,15,opt,name=setup_txid,json=setupTxid,proto3" json:"setup_txid,omitempty"`
	FinalTxid        string         `protobuf:"bytes,16,opt,name=final_txid,json=finalTxid,proto3" json:"final_txid,omitempty"`
	SettlementTxid   string         `protobuf:"bytes,17,opt,name=settlement_txid,json=settlementTxid,proto3" json:"settlement_txid,omitempty"`
}

func (x *HashRateContract) Reset() {
	*x = HashRateContract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashRateContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashRateContract) ProtoMessage() {}

func (x *HashRateContract) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashRateContract.ProtoReflect.Descriptor instead.
func (*HashRateContract) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{18}
}

func (x *HashRateContract) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HashRateContract) GetContractType() ContractType {
	if x != nil {
		return x.ContractType
	}
	return ContractType_CONTRACT_TYPE_UNSPECIFIED
}

func (x *HashRateContract) GetStrikeHashRate() float64 {
	if x != nil {
		return x.StrikeHashRate
	}
	return 0
}

func (x *HashRateContract) GetStartBlockHeight() int32 {
	if x != nil {
		return x.StartBlockHeight
	}
	return 0
}

func (x *HashRateContract) GetEndBlockHeight() int32 {
	if x != nil {
		return x.EndBlockHeight
	}
	return 0
}

func (x *HashRateContract) GetTargetTimestamp() int64 {
	if x != nil {
		return x.TargetTimestamp
	}
	return 0
}

func (x *HashRateContract) GetContractSize() uint64 {
	if x != nil {
		return x.ContractSize
	}
	return 0
}

func (x *HashRateContract) GetPremium() uint64 {
	if x != nil {
		return x.Premium
	}
	return 0
}

func (x *HashRateContract) GetBuyerPubkey() string {
	if x != nil {
		return x.BuyerPubkey
	}
	return ""
}

func (x *HashRateContract) GetSellerPubkey() string {
	if x != nil {
		return x.SellerPubkey
	}
	return ""
}

func (x *HashRateContract) GetStatus() ContractStatus {
	if x != nil {
		return x.Status
	}
	return ContractStatus_CONTRACT_STATUS_UNSPECIFIED
}

func (x *HashRateContract) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *HashRateContract) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *HashRateContract) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *HashRateContract) GetSetupTxid() string {
	if x != nil {
		return x.SetupTxid
	}
	return ""
}

func (x *HashRateContract) GetFinalTxid() string {
	if x != nil {
		return x.FinalTxid
	}
	return ""
}

func (x *HashRateContract) GetSettlementTxid() string {
	if x != nil {
		return x.SettlementTxid
	}
	return ""
}

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId            string       `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Side              OrderSide    `protobuf:"varint,3,opt,name=side,proto3,enum=ark.v1.OrderSide" json:"side,omitempty"`
	ContractType      ContractType `protobuf:"varint,4,opt,name=contract_type,json=contractType,proto3,enum=ark.v1.ContractType" json:"contract_type,omitempty"`
	StrikeHashRate    float64      `protobuf:"fixed64,5,opt,name=strike_hash_rate,json=strikeHashRate,proto3" json:"strike_hash_rate,omitempty"`
	StartBlockHeight  int32        `protobuf:"varint,6,opt,name=start_block_height,json=startBlockHeight,proto3" json:"start_block_height,omitempty"`
	EndBlockHeight    int32        `protobuf:"varint,7,opt,name=end_block_height,json=endBlockHeight,proto3" json:"end_block_height,omitempty"`
	Price             uint64       `protobuf:"varint,8,opt,name=price,proto3" json:"price,omitempty"`
	Quantity          int32        `protobuf:"varint,9,opt,name=quantity,proto3" json:"quantity,omitempty"`
	RemainingQuantity int32        `protobuf:"varint,10,opt,name=remaining_quantity,json=remainingQuantity,proto3" json:"remaining_quantity,omitempty"`
	Status            OrderStatus  `protobuf:"varint,11,opt,name=status,proto3,enum=ark.v1.OrderStatus" json:"status,omitempty"`
	Pubkey            string       `protobuf:"bytes,12,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	CreatedAt         int64        `protobuf:"varint,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt         int64        `protobuf:"varint,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	ExpiresAt         int64        `protobuf:"varint,15,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{19}
}

func (x *Order) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Order) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Order) GetSide() OrderSide {
	if x != nil {
		return x.Side
	}
	return OrderSide_ORDER_SIDE_UNSPECIFIED
}

func (x *Order) GetContractType() ContractType {
	if x != nil {
		return x.ContractType
	}
	return ContractType_CONTRACT_TYPE_UNSPECIFIED
}

func (x *Order) GetStrikeHashRate() float64 {
	if x != nil {
		return x.StrikeHashRate
	}
	return 0
}

func (x *Order) GetStartBlockHeight() int32 {
	if x != nil {
		return x.StartBlockHeight
	}
	return 0
}

func (x *Order) GetEndBlockHeight() int32 {
	if x != nil {
		return x.EndBlockHeight
	}
	return 0
}

func (x *Order) GetPrice() uint64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Order) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Order) GetRemainingQuantity() int32 {
	if x != nil {
		return x.RemainingQuantity
	}
	return 0
}

func (x *Order) GetStatus() OrderStatus {
	if x != nil {
		return x.Status
	}
	return OrderStatus_ORDER_STATUS_UNSPECIFIED
}

func (x *Order) GetPubkey() string {
	if x != nil {
		return x.Pubkey
	}
	return ""
}

func (x *Order) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Order) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Order) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

type Trade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BuyOrderId  string `protobuf:"bytes,2,opt,name=buy_order_id,json=buyOrderId,proto3" json:"buy_order_id,omitempty"`
	SellOrderId string `protobuf:"bytes,3,opt,name=sell_order_id,json=sellOrderId,proto3" json:"sell_order_id,omitempty"`
	Price       uint64 `protobuf:"varint,4,opt,name=price,proto3" json:"price,omitempty"`
	Quantity    int32  `protobuf:"varint,5,opt,name=quantity,proto3" json:"quantity,omitempty"`
	ExecutedAt  int64  `protobuf:"varint,6,opt,name=executed_at,json=executedAt,proto3" json:"executed_at,omitempty"`
	ContractId  string `protobuf:"bytes,7,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
}

func (x *Trade) Reset() {
	*x = Trade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trade) ProtoMessage() {}

func (x *Trade) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trade.ProtoReflect.Descriptor instead.
func (*Trade) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{20}
}

func (x *Trade) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Trade) GetBuyOrderId() string {
	if x != nil {
		return x.BuyOrderId
	}
	return ""
}

func (x *Trade) GetSellOrderId() string {
	if x != nil {
		return x.SellOrderId
	}
	return ""
}

func (x *Trade) GetPrice() uint64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Trade) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Trade) GetExecutedAt() int64 {
	if x != nil {
		return x.ExecutedAt
	}
	return 0
}

func (x *Trade) GetContractId() string {
	if x != nil {
		return x.ContractId
	}
	return ""
}

type OrderBookEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price    uint64 `protobuf:"varint,1,opt,name=price,proto3" json:"price,omitempty"`
	Quantity int32  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *OrderBookEntry) Reset() {
	*x = OrderBookEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderBookEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderBookEntry) ProtoMessage() {}

func (x *OrderBookEntry) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderBookEntry.ProtoReflect.Descriptor instead.
func (*OrderBookEntry) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{21}
}

func (x *OrderBookEntry) GetPrice() uint64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *OrderBookEntry) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type OrderBook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bids      []*OrderBookEntry `protobuf:"bytes,1,rep,name=bids,proto3" json:"bids,omitempty"`
	Asks      []*OrderBookEntry `protobuf:"bytes,2,rep,name=asks,proto3" json:"asks,omitempty"`
	Timestamp int64             `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *OrderBook) Reset() {
	*x = OrderBook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderBook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderBook) ProtoMessage() {}

func (x *OrderBook) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderBook.ProtoReflect.Descriptor instead.
func (*OrderBook) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{22}
}

func (x *OrderBook) GetBids() []*OrderBookEntry {
	if x != nil {
		return x.Bids
	}
	return nil
}

func (x *OrderBook) GetAsks() []*OrderBookEntry {
	if x != nil {
		return x.Asks
	}
	return nil
}

func (x *OrderBook) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type HistoricalHashrate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHeight int32   `protobuf:"varint,1,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`
	Timestamp   int64   `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Hashrate    float64 `protobuf:"fixed64,3,opt,name=hashrate,proto3" json:"hashrate,omitempty"`
	Difficulty  uint64  `protobuf:"varint,4,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
}

func (x *HistoricalHashrate) Reset() {
	*x = HistoricalHashrate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoricalHashrate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoricalHashrate) ProtoMessage() {}

func (x *HistoricalHashrate) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoricalHashrate.ProtoReflect.Descriptor instead.
func (*HistoricalHashrate) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{23}
}

func (x *HistoricalHashrate) GetBlockHeight() int32 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *HistoricalHashrate) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *HistoricalHashrate) GetHashrate() float64 {
	if x != nil {
		return x.Hashrate
	}
	return 0
}

func (x *HistoricalHashrate) GetDifficulty() uint64 {
	if x != nil {
		return x.Difficulty
	}
	return 0
}

// Events
type RoundFinalizationEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RoundTx         string               `protobuf:"bytes,2,opt,name=round_tx,json=roundTx,proto3" json:"round_tx,omitempty"`
	VtxoTree        *Tree                `protobuf:"bytes,3,opt,name=vtxo_tree,json=vtxoTree,proto3" json:"vtxo_tree,omitempty"`
	Connectors      *Tree                `protobuf:"bytes,4,opt,name=connectors,proto3" json:"connectors,omitempty"`
	MinRelayFeeRate int64                `protobuf:"varint,5,opt,name=min_relay_fee_rate,json=minRelayFeeRate,proto3" json:"min_relay_fee_rate,omitempty"`
	ConnectorsIndex map[string]*Outpoint `protobuf:"bytes,6,rep,name=connectors_index,json=connectorsIndex,proto3" json:"connectors_index,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RoundFinalizationEvent) Reset() {
	*x = RoundFinalizationEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoundFinalizationEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoundFinalizationEvent) ProtoMessage() {}

func (x *RoundFinalizationEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoundFinalizationEvent.ProtoReflect.Descriptor instead.
func (*RoundFinalizationEvent) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{24}
}

func (x *RoundFinalizationEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RoundFinalizationEvent) GetRoundTx() string {
	if x != nil {
		return x.RoundTx
	}
	return ""
}

func (x *RoundFinalizationEvent) GetVtxoTree() *Tree {
	if x != nil {
		return x.VtxoTree
	}
	return nil
}

func (x *RoundFinalizationEvent) GetConnectors() *Tree {
	if x != nil {
		return x.Connectors
	}
	return nil
}

func (x *RoundFinalizationEvent) GetMinRelayFeeRate() int64 {
	if x != nil {
		return x.MinRelayFeeRate
	}
	return 0
}

func (x *RoundFinalizationEvent) GetConnectorsIndex() map[string]*Outpoint {
	if x != nil {
		return x.ConnectorsIndex
	}
	return nil
}

type RoundFinalizedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RoundTxid string `protobuf:"bytes,2,opt,name=round_txid,json=roundTxid,proto3" json:"round_txid,omitempty"`
}

func (x *RoundFinalizedEvent) Reset() {
	*x = RoundFinalizedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoundFinalizedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoundFinalizedEvent) ProtoMessage() {}

func (x *RoundFinalizedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoundFinalizedEvent.ProtoReflect.Descriptor instead.
func (*RoundFinalizedEvent) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{25}
}

func (x *RoundFinalizedEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RoundFinalizedEvent) GetRoundTxid() string {
	if x != nil {
		return x.RoundTxid
	}
	return ""
}

type RoundFailed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *RoundFailed) Reset() {
	*x = RoundFailed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoundFailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoundFailed) ProtoMessage() {}

func (x *RoundFailed) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoundFailed.ProtoReflect.Descriptor instead.
func (*RoundFailed) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{26}
}

func (x *RoundFailed) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RoundFailed) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type RoundSigningEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CosignersPubkeys []string `protobuf:"bytes,2,rep,name=cosigners_pubkeys,json=cosignersPubkeys,proto3" json:"cosigners_pubkeys,omitempty"`
	UnsignedVtxoTree *Tree    `protobuf:"bytes,3,opt,name=unsigned_vtxo_tree,json=unsignedVtxoTree,proto3" json:"unsigned_vtxo_tree,omitempty"`
	UnsignedRoundTx  string   `protobuf:"bytes,4,opt,name=unsigned_round_tx,json=unsignedRoundTx,proto3" json:"unsigned_round_tx,omitempty"`
}

func (x *RoundSigningEvent) Reset() {
	*x = RoundSigningEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoundSigningEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoundSigningEvent) ProtoMessage() {}

func (x *RoundSigningEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoundSigningEvent.ProtoReflect.Descriptor instead.
func (*RoundSigningEvent) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{27}
}

func (x *RoundSigningEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RoundSigningEvent) GetCosignersPubkeys() []string {
	if x != nil {
		return x.CosignersPubkeys
	}
	return nil
}

func (x *RoundSigningEvent) GetUnsignedVtxoTree() *Tree {
	if x != nil {
		return x.UnsignedVtxoTree
	}
	return nil
}

func (x *RoundSigningEvent) GetUnsignedRoundTx() string {
	if x != nil {
		return x.UnsignedRoundTx
	}
	return ""
}

type RoundSigningNoncesGeneratedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TreeNonces string `protobuf:"bytes,2,opt,name=tree_nonces,json=treeNonces,proto3" json:"tree_nonces,omitempty"`
}

func (x *RoundSigningNoncesGeneratedEvent) Reset() {
	*x = RoundSigningNoncesGeneratedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoundSigningNoncesGeneratedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoundSigningNoncesGeneratedEvent) ProtoMessage() {}

func (x *RoundSigningNoncesGeneratedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoundSigningNoncesGeneratedEvent.ProtoReflect.Descriptor instead.
func (*RoundSigningNoncesGeneratedEvent) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{28}
}

func (x *RoundSigningNoncesGeneratedEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RoundSigningNoncesGeneratedEvent) GetTreeNonces() string {
	if x != nil {
		return x.TreeNonces
	}
	return ""
}

// Hashrate Contract Events
type ContractCreatedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contract *HashRateContract `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract,omitempty"`
}

func (x *ContractCreatedEvent) Reset() {
	*x = ContractCreatedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractCreatedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractCreatedEvent) ProtoMessage() {}

func (x *ContractCreatedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractCreatedEvent.ProtoReflect.Descriptor instead.
func (*ContractCreatedEvent) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{29}
}

func (x *ContractCreatedEvent) GetContract() *HashRateContract {
	if x != nil {
		return x.Contract
	}
	return nil
}

type ContractSetupEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractId string `protobuf:"bytes,1,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	SetupTxid  string `protobuf:"bytes,2,opt,name=setup_txid,json=setupTxid,proto3" json:"setup_txid,omitempty"`
}

func (x *ContractSetupEvent) Reset() {
	*x = ContractSetupEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractSetupEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractSetupEvent) ProtoMessage() {}

func (x *ContractSetupEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractSetupEvent.ProtoReflect.Descriptor instead.
func (*ContractSetupEvent) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{30}
}

func (x *ContractSetupEvent) GetContractId() string {
	if x != nil {
		return x.ContractId
	}
	return ""
}

func (x *ContractSetupEvent) GetSetupTxid() string {
	if x != nil {
		return x.SetupTxid
	}
	return ""
}

type ContractSettledEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractId     string `protobuf:"bytes,1,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	SettlementTxid string `protobuf:"bytes,2,opt,name=settlement_txid,json=settlementTxid,proto3" json:"settlement_txid,omitempty"`
	WinnerPubkey   string `protobuf:"bytes,3,opt,name=winner_pubkey,json=winnerPubkey,proto3" json:"winner_pubkey,omitempty"`
}

func (x *ContractSettledEvent) Reset() {
	*x = ContractSettledEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractSettledEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractSettledEvent) ProtoMessage() {}

func (x *ContractSettledEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractSettledEvent.ProtoReflect.Descriptor instead.
func (*ContractSettledEvent) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{31}
}

func (x *ContractSettledEvent) GetContractId() string {
	if x != nil {
		return x.ContractId
	}
	return ""
}

func (x *ContractSettledEvent) GetSettlementTxid() string {
	if x != nil {
		return x.SettlementTxid
	}
	return ""
}

func (x *ContractSettledEvent) GetWinnerPubkey() string {
	if x != nil {
		return x.WinnerPubkey
	}
	return ""
}

// Order and Trade Events
type OrderCreatedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order *Order `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *OrderCreatedEvent) Reset() {
	*x = OrderCreatedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCreatedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCreatedEvent) ProtoMessage() {}

func (x *OrderCreatedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCreatedEvent.ProtoReflect.Descriptor instead.
func (*OrderCreatedEvent) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{32}
}

func (x *OrderCreatedEvent) GetOrder() *Order {
	if x != nil {
		return x.Order
	}
	return nil
}

type OrderUpdatedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order *Order `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *OrderUpdatedEvent) Reset() {
	*x = OrderUpdatedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderUpdatedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderUpdatedEvent) ProtoMessage() {}

func (x *OrderUpdatedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderUpdatedEvent.ProtoReflect.Descriptor instead.
func (*OrderUpdatedEvent) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{33}
}

func (x *OrderUpdatedEvent) GetOrder() *Order {
	if x != nil {
		return x.Order
	}
	return nil
}

type TradeExecutedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trade *Trade `protobuf:"bytes,1,opt,name=trade,proto3" json:"trade,omitempty"`
}

func (x *TradeExecutedEvent) Reset() {
	*x = TradeExecutedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeExecutedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeExecutedEvent) ProtoMessage() {}

func (x *TradeExecutedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeExecutedEvent.ProtoReflect.Descriptor instead.
func (*TradeExecutedEvent) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{34}
}

func (x *TradeExecutedEvent) GetTrade() *Trade {
	if x != nil {
		return x.Trade
	}
	return nil
}

// Message definitions for GetExitPath
type GetExitPathRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VtxoId             string `protobuf:"bytes,1,opt,name=vtxoId,proto3" json:"vtxoId,omitempty"`
	DestinationAddress string `protobuf:"bytes,2,opt,name=destinationAddress,proto3" json:"destinationAddress,omitempty"`
	FeeRate            int64  `protobuf:"varint,3,opt,name=feeRate,proto3" json:"feeRate,omitempty"`
}

func (x *GetExitPathRequest) Reset() {
	*x = GetExitPathRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExitPathRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExitPathRequest) ProtoMessage() {}

func (x *GetExitPathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExitPathRequest.ProtoReflect.Descriptor instead.
func (*GetExitPathRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{35}
}

func (x *GetExitPathRequest) GetVtxoId() string {
	if x != nil {
		return x.VtxoId
	}
	return ""
}

func (x *GetExitPathRequest) GetDestinationAddress() string {
	if x != nil {
		return x.DestinationAddress
	}
	return ""
}

func (x *GetExitPathRequest) GetFeeRate() int64 {
	if x != nil {
		return x.FeeRate
	}
	return 0
}

type GetExitPathResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid           string `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	SerializedPsbt string `protobuf:"bytes,2,opt,name=serializedPsbt,proto3" json:"serializedPsbt,omitempty"`
	Timelock       int64  `protobuf:"varint,3,opt,name=timelock,proto3" json:"timelock,omitempty"`
	LockType       string `protobuf:"bytes,4,opt,name=lockType,proto3" json:"lockType,omitempty"`
}

func (x *GetExitPathResponse) Reset() {
	*x = GetExitPathResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExitPathResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExitPathResponse) ProtoMessage() {}

func (x *GetExitPathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExitPathResponse.ProtoReflect.Descriptor instead.
func (*GetExitPathResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{36}
}

func (x *GetExitPathResponse) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *GetExitPathResponse) GetSerializedPsbt() string {
	if x != nil {
		return x.SerializedPsbt
	}
	return ""
}

func (x *GetExitPathResponse) GetTimelock() int64 {
	if x != nil {
		return x.Timelock
	}
	return 0
}

func (x *GetExitPathResponse) GetLockType() string {
	if x != nil {
		return x.LockType
	}
	return ""
}

// Message definitions for CreateOutOfRoundTx
type CreateOutOfRoundTxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SerializedPsbt string    `protobuf:"bytes,1,opt,name=serializedPsbt,proto3" json:"serializedPsbt,omitempty"`
	Outputs        []*Output `protobuf:"bytes,2,rep,name=outputs,proto3" json:"outputs,omitempty"`
}

func (x *CreateOutOfRoundTxRequest) Reset() {
	*x = CreateOutOfRoundTxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOutOfRoundTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOutOfRoundTxRequest) ProtoMessage() {}

func (x *CreateOutOfRoundTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOutOfRoundTxRequest.ProtoReflect.Descriptor instead.
func (*CreateOutOfRoundTxRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{37}
}

func (x *CreateOutOfRoundTxRequest) GetSerializedPsbt() string {
	if x != nil {
		return x.SerializedPsbt
	}
	return ""
}

func (x *CreateOutOfRoundTxRequest) GetOutputs() []*Output {
	if x != nil {
		return x.Outputs
	}
	return nil
}

type CreateOutOfRoundTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid           string `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	SerializedPsbt string `protobuf:"bytes,2,opt,name=serializedPsbt,proto3" json:"serializedPsbt,omitempty"`
}

func (x *CreateOutOfRoundTxResponse) Reset() {
	*x = CreateOutOfRoundTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ark_v1_types_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOutOfRoundTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOutOfRoundTxResponse) ProtoMessage() {}

func (x *CreateOutOfRoundTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_types_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOutOfRoundTxResponse.ProtoReflect.Descriptor instead.
func (*CreateOutOfRoundTxResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_types_proto_rawDescGZIP(), []int{38}
}

func (x *CreateOutOfRoundTxResponse) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *CreateOutOfRoundTxResponse) GetSerializedPsbt() string {
	if x != nil {
		return x.SerializedPsbt
	}
	return ""
}

var File_ark_v1_types_proto protoreflect.FileDescriptor

var file_ark_v1_types_proto_rawDesc = []byte{
	0x0a, 0x12, 0x61, 0x72, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x22, 0xfe, 0x01, 0x0a,
	0x05, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x78, 0x12, 0x29, 0x0a, 0x09, 0x76, 0x74, 0x78,
	0x6f, 0x5f, 0x74, 0x72, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61,
	0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x52, 0x08, 0x76, 0x74, 0x78, 0x6f,
	0x54, 0x72, 0x65, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x66, 0x65, 0x69, 0x74, 0x5f,
	0x74, 0x78, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x66, 0x65,
	0x69, 0x74, 0x54, 0x78, 0x73, 0x12, 0x2c, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x72, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x73, 0x12, 0x28, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x12, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x22, 0x32, 0x0a,
	0x08, 0x4f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x76, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x76, 0x6f, 0x75,
	0x74, 0x22, 0x9d, 0x01, 0x0a, 0x05, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x6f,
	0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x08, 0x6f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0a, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x34, 0x0a, 0x0a, 0x74,
	0x61, 0x70, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x70, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x74, 0x61, 0x70, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x74, 0x61, 0x70, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x74, 0x72, 0x65,
	0x65, 0x22, 0x52, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x22, 0x31, 0x0a, 0x04, 0x54, 0x72, 0x65, 0x65, 0x12, 0x29, 0x0a,
	0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x52, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x22, 0x2f, 0x0a, 0x09, 0x54, 0x72, 0x65, 0x65,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x22, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x4b, 0x0a, 0x04, 0x4e, 0x6f, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x78, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x74, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x78, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x54, 0x78, 0x69, 0x64, 0x22, 0xc2, 0x02, 0x0a, 0x04, 0x56, 0x74, 0x78, 0x6f, 0x12,
	0x2c, 0x0a, 0x08, 0x6f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x73, 0x70,
	0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x78, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x78,
	0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x12, 0x1b, 0x0a,
	0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x77,
	0x65, 0x70, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x73, 0x77, 0x65, 0x70, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12,
	0x1b, 0x0a, 0x09, 0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x5f, 0x74, 0x78, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x54, 0x78, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xd4, 0x01, 0x0a, 0x10,
	0x52, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x78, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x0b, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x74,
	0x78, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x72, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x74, 0x78, 0x6f, 0x52, 0x0a, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x56, 0x74,
	0x78, 0x6f, 0x73, 0x12, 0x35, 0x0a, 0x0f, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x76, 0x74, 0x78, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61,
	0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x74, 0x78, 0x6f, 0x52, 0x0e, 0x73, 0x70, 0x65, 0x6e,
	0x64, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x74, 0x78, 0x6f, 0x73, 0x12, 0x46, 0x0a, 0x16, 0x63, 0x6c,
	0x61, 0x69, 0x6d, 0x65, 0x64, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x75,
	0x74, 0x78, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x72, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x14, 0x63, 0x6c,
	0x61, 0x69, 0x6d, 0x65, 0x64, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x55, 0x74, 0x78,
	0x6f, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x0b,
	0x73, 0x70, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x74, 0x78, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x74, 0x78, 0x6f, 0x52,
	0x0a, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x56, 0x74, 0x78, 0x6f, 0x73, 0x12, 0x35, 0x0a, 0x0f, 0x73,
	0x70, 0x65, 0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x76, 0x74, 0x78, 0x6f, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x74,
	0x78, 0x6f, 0x52, 0x0e, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x74, 0x78,
	0x6f, 0x73, 0x22, 0x6b, 0x0a, 0x0e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x50,
	0x72, 0x6f, 0x6f, 0x66, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22,
	0x70, 0x0a, 0x12, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x56, 0x74, 0x78, 0x6f, 0x4f, 0x75, 0x74,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x6f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x73, 0x68, 0x69, 0x70, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x6f,
	0x66, 0x22, 0x26, 0x0a, 0x0a, 0x54, 0x61, 0x70, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x22, 0x97, 0x01, 0x0a, 0x0a, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x48, 0x6f, 0x75, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x22, 0x0a, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x45, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x25, 0x0a, 0x0e,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x22, 0x74, 0x0a, 0x0f, 0x53, 0x77, 0x65, 0x65, 0x70, 0x61, 0x62, 0x6c, 0x65,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x6f,
	0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x76, 0x6f, 0x75, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x63,
	0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x22, 0x5e, 0x0a, 0x0e, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x53, 0x77, 0x65, 0x65, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x77, 0x65, 0x65, 0x70, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x52, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x22, 0xe3, 0x02, 0x0a, 0x0d, 0x54, 0x78,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2c, 0x0a, 0x09, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x09, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x06,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x0e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x32,
	0x0a, 0x15, 0x63, 0x6f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x63,
	0x6f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x69, 0x6e, 0x67, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x69, 0x6e, 0x67, 0x22,
	0x4e, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x78, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x76, 0x6f, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x85, 0x05, 0x0a, 0x10, 0x48, 0x61, 0x73, 0x68, 0x52, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x61, 0x72,
	0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x28, 0x0a, 0x10, 0x73, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x73, 0x74, 0x72, 0x69, 0x6b,
	0x65, 0x48, 0x61, 0x73, 0x68, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x6e, 0x64, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x65, 0x6e, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x62,
	0x75, 0x79, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x62, 0x75, 0x79, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x23,
	0x0a, 0x0d, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x50, 0x75, 0x62,
	0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x74, 0x75, 0x70, 0x5f, 0x74, 0x78, 0x69, 0x64, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x74, 0x75, 0x70, 0x54, 0x78, 0x69, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x78, 0x69, 0x64, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x54, 0x78, 0x69, 0x64, 0x12, 0x27,
	0x0a, 0x0f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x78, 0x69,
	0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x78, 0x69, 0x64, 0x22, 0x97, 0x04, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x73, 0x69,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x52, 0x04, 0x73, 0x69, 0x64,
	0x65, 0x12, 0x39, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x10,
	0x73, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x72, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x73, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x48, 0x61,
	0x73, 0x68, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x65, 0x6e, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x72, 0x65,
	0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x13, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x75,
	0x62, 0x6b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41,
	0x74, 0x22, 0xd1, 0x01, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x62,
	0x75, 0x79, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x62, 0x75, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a,
	0x0d, 0x73, 0x65, 0x6c, 0x6c, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x6c, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x0e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x6f,
	0x6f, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x81, 0x01, 0x0a, 0x09, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x2a, 0x0a, 0x04, 0x62, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x62,
	0x69, 0x64, 0x73, 0x12, 0x2a, 0x0a, 0x04, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x6f, 0x6f, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x61, 0x73, 0x6b, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x91, 0x01,
	0x0a, 0x12, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x48, 0x61, 0x73, 0x68,
	0x72, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x68, 0x72, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x68, 0x61, 0x73, 0x68, 0x72, 0x61, 0x74,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74,
	0x79, 0x22, 0xff, 0x02, 0x0a, 0x16, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x69, 0x6e, 0x61, 0x6c,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x78, 0x12, 0x29, 0x0a, 0x09, 0x76, 0x74, 0x78, 0x6f, 0x5f,
	0x74, 0x72, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x72, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x52, 0x08, 0x76, 0x74, 0x78, 0x6f, 0x54, 0x72,
	0x65, 0x65, 0x12, 0x2c, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x72, 0x65, 0x65, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73,
	0x12, 0x2b, 0x0a, 0x12, 0x6d, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x66, 0x65,
	0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6d, 0x69,
	0x6e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x5e, 0x0a,
	0x10, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x1a, 0x54, 0x0a,
	0x14, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x75, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x44, 0x0a, 0x13, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x69, 0x6e, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x5f, 0x74, 0x78, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x78, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x0b, 0x52, 0x6f, 0x75,
	0x6e, 0x64, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x22, 0xb8, 0x01, 0x0a, 0x11, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e,
	0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x72, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x10, 0x63, 0x6f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x73, 0x50, 0x75, 0x62, 0x6b,
	0x65, 0x79, 0x73, 0x12, 0x3a, 0x0a, 0x12, 0x75, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f,
	0x76, 0x74, 0x78, 0x6f, 0x5f, 0x74, 0x72, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x65, 0x65, 0x52, 0x10, 0x75,
	0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x56, 0x74, 0x78, 0x6f, 0x54, 0x72, 0x65, 0x65, 0x12,
	0x2a, 0x0a, 0x11, 0x75, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x5f, 0x74, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x75, 0x6e, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x54, 0x78, 0x22, 0x53, 0x0a, 0x20, 0x52,
	0x6f, 0x75, 0x6e, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x6e, 0x63, 0x65,
	0x73, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x73,
	0x22, 0x4c, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x72, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x22, 0x54,
	0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x65, 0x74, 0x75, 0x70, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x74, 0x75, 0x70, 0x5f, 0x74,
	0x78, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x74, 0x75, 0x70,
	0x54, 0x78, 0x69, 0x64, 0x22, 0x85, 0x01, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x27,
	0x0a, 0x0f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x78, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x78, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x69, 0x6e, 0x6e, 0x65,
	0x72, 0x5f, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x22, 0x38, 0x0a, 0x11,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x23, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x38, 0x0a, 0x11, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x05, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x72, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x22, 0x39, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x64, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x52, 0x05, 0x74, 0x72, 0x61, 0x64, 0x65, 0x22, 0x76, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x45, 0x78, 0x69, 0x74, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x74, 0x78, 0x6f, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x76, 0x74, 0x78, 0x6f, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x64, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x65, 0x65,
	0x52, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x66, 0x65, 0x65, 0x52,
	0x61, 0x74, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x45, 0x78, 0x69, 0x74, 0x50,
	0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x12,
	0x26, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x50, 0x73, 0x62,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x64, 0x50, 0x73, 0x62, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x6d, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x52, 0x6f,
	0x75, 0x6e, 0x64, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e,
	0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x50, 0x73, 0x62, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64,
	0x50, 0x73, 0x62, 0x74, 0x12, 0x28, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x22, 0x58,
	0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x4f, 0x66, 0x52, 0x6f, 0x75,
	0x6e, 0x64, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64,
	0x12, 0x26, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x50, 0x73,
	0x62, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x64, 0x50, 0x73, 0x62, 0x74, 0x2a, 0x98, 0x01, 0x0a, 0x0a, 0x52, 0x6f, 0x75,
	0x6e, 0x64, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x4f, 0x55, 0x4e, 0x44,
	0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x52, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x53, 0x54,
	0x41, 0x47, 0x45, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x52, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x47,
	0x45, 0x5f, 0x46, 0x49, 0x4e, 0x41, 0x4c, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02,
	0x12, 0x19, 0x0a, 0x15, 0x52, 0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f,
	0x46, 0x49, 0x4e, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x52,
	0x4f, 0x55, 0x4e, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45,
	0x44, 0x10, 0x04, 0x2a, 0x5c, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x43, 0x41, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x4f,
	0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x55, 0x54, 0x10,
	0x02, 0x2a, 0xdb, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43,
	0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x45, 0x54, 0x55, 0x50, 0x10, 0x02, 0x12, 0x1a, 0x0a,
	0x16, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x03, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x4f, 0x4e,
	0x54, 0x52, 0x41, 0x43, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x45, 0x54,
	0x54, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41,
	0x43, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45,
	0x44, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x06, 0x2a,
	0x50, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x16,
	0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x49, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x4f, 0x52, 0x44, 0x45,
	0x52, 0x5f, 0x53, 0x49, 0x44, 0x45, 0x5f, 0x42, 0x55, 0x59, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f,
	0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x49, 0x44, 0x45, 0x5f, 0x53, 0x45, 0x4c, 0x4c, 0x10,
	0x02, 0x2a, 0xaa, 0x01, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1c, 0x0a, 0x18, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x15, 0x0a, 0x11, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x4f, 0x50, 0x45, 0x4e, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x41, 0x4c, 0x10, 0x02,
	0x12, 0x17, 0x0a, 0x13, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x46, 0x49, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x4f, 0x52, 0x44,
	0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c,
	0x45, 0x44, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x05, 0x42, 0x3f,
	0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x72, 0x6b,
	0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x72, 0x6b, 0x2f, 0x61, 0x70, 0x69,
	0x2d, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67,
	0x65, 0x6e, 0x2f, 0x61, 0x72, 0x6b, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x72, 0x6b, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ark_v1_types_proto_rawDescOnce sync.Once
	file_ark_v1_types_proto_rawDescData = file_ark_v1_types_proto_rawDesc
)

func file_ark_v1_types_proto_rawDescGZIP() []byte {
	file_ark_v1_types_proto_rawDescOnce.Do(func() {
		file_ark_v1_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_ark_v1_types_proto_rawDescData)
	})
	return file_ark_v1_types_proto_rawDescData
}

var file_ark_v1_types_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_ark_v1_types_proto_msgTypes = make([]protoimpl.MessageInfo, 40)
var file_ark_v1_types_proto_goTypes = []interface{}{
	(RoundStage)(0),                          // 0: ark.v1.RoundStage
	(ContractType)(0),                        // 1: ark.v1.ContractType
	(ContractStatus)(0),                      // 2: ark.v1.ContractStatus
	(OrderSide)(0),                           // 3: ark.v1.OrderSide
	(OrderStatus)(0),                         // 4: ark.v1.OrderStatus
	(*Round)(nil),                            // 5: ark.v1.Round
	(*Outpoint)(nil),                         // 6: ark.v1.Outpoint
	(*Input)(nil),                            // 7: ark.v1.Input
	(*Output)(nil),                           // 8: ark.v1.Output
	(*Tree)(nil),                             // 9: ark.v1.Tree
	(*TreeLevel)(nil),                        // 10: ark.v1.TreeLevel
	(*Node)(nil),                             // 11: ark.v1.Node
	(*Vtxo)(nil),                             // 12: ark.v1.Vtxo
	(*RoundTransaction)(nil),                 // 13: ark.v1.RoundTransaction
	(*RedeemTransaction)(nil),                // 14: ark.v1.RedeemTransaction
	(*OwnershipProof)(nil),                   // 15: ark.v1.OwnershipProof
	(*SignedVtxoOutpoint)(nil),               // 16: ark.v1.SignedVtxoOutpoint
	(*Tapscripts)(nil),                       // 17: ark.v1.Tapscripts
	(*MarketHour)(nil),                       // 18: ark.v1.MarketHour
	(*SweepableOutput)(nil),                  // 19: ark.v1.SweepableOutput
	(*ScheduledSweep)(nil),                   // 20: ark.v1.ScheduledSweep
	(*TxRequestInfo)(nil),                    // 21: ark.v1.TxRequestInfo
	(*RequestInput)(nil),                     // 22: ark.v1.RequestInput
	(*HashRateContract)(nil),                 // 23: ark.v1.HashRateContract
	(*Order)(nil),                            // 24: ark.v1.Order
	(*Trade)(nil),                            // 25: ark.v1.Trade
	(*OrderBookEntry)(nil),                   // 26: ark.v1.OrderBookEntry
	(*OrderBook)(nil),                        // 27: ark.v1.OrderBook
	(*HistoricalHashrate)(nil),               // 28: ark.v1.HistoricalHashrate
	(*RoundFinalizationEvent)(nil),           // 29: ark.v1.RoundFinalizationEvent
	(*RoundFinalizedEvent)(nil),              // 30: ark.v1.RoundFinalizedEvent
	(*RoundFailed)(nil),                      // 31: ark.v1.RoundFailed
	(*RoundSigningEvent)(nil),                // 32: ark.v1.RoundSigningEvent
	(*RoundSigningNoncesGeneratedEvent)(nil), // 33: ark.v1.RoundSigningNoncesGeneratedEvent
	(*ContractCreatedEvent)(nil),             // 34: ark.v1.ContractCreatedEvent
	(*ContractSetupEvent)(nil),               // 35: ark.v1.ContractSetupEvent
	(*ContractSettledEvent)(nil),             // 36: ark.v1.ContractSettledEvent
	(*OrderCreatedEvent)(nil),                // 37: ark.v1.OrderCreatedEvent
	(*OrderUpdatedEvent)(nil),                // 38: ark.v1.OrderUpdatedEvent
	(*TradeExecutedEvent)(nil),               // 39: ark.v1.TradeExecutedEvent
	(*GetExitPathRequest)(nil),               // 40: ark.v1.GetExitPathRequest
	(*GetExitPathResponse)(nil),              // 41: ark.v1.GetExitPathResponse
	(*CreateOutOfRoundTxRequest)(nil),        // 42: ark.v1.CreateOutOfRoundTxRequest
	(*CreateOutOfRoundTxResponse)(nil),       // 43: ark.v1.CreateOutOfRoundTxResponse
	nil,                                      // 44: ark.v1.RoundFinalizationEvent.ConnectorsIndexEntry
}
var file_ark_v1_types_proto_depIdxs = []int32{
	9,  // 0: ark.v1.Round.vtxo_tree:type_name -> ark.v1.Tree
	9,  // 1: ark.v1.Round.connectors:type_name -> ark.v1.Tree
	0,  // 2: ark.v1.Round.stage:type_name -> ark.v1.RoundStage
	6,  // 3: ark.v1.Input.outpoint:type_name -> ark.v1.Outpoint
	17, // 4: ark.v1.Input.tapscripts:type_name -> ark.v1.Tapscripts
	10, // 5: ark.v1.Tree.levels:type_name -> ark.v1.TreeLevel
	11, // 6: ark.v1.TreeLevel.nodes:type_name -> ark.v1.Node
	6,  // 7: ark.v1.Vtxo.outpoint:type_name -> ark.v1.Outpoint
	12, // 8: ark.v1.RoundTransaction.spent_vtxos:type_name -> ark.v1.Vtxo
	12, // 9: ark.v1.RoundTransaction.spendable_vtxos:type_name -> ark.v1.Vtxo
	6,  // 10: ark.v1.RoundTransaction.claimed_boarding_utxos:type_name -> ark.v1.Outpoint
	12, // 11: ark.v1.RedeemTransaction.spent_vtxos:type_name -> ark.v1.Vtxo
	12, // 12: ark.v1.RedeemTransaction.spendable_vtxos:type_name -> ark.v1.Vtxo
	6,  // 13: ark.v1.SignedVtxoOutpoint.outpoint:type_name -> ark.v1.Outpoint
	15, // 14: ark.v1.SignedVtxoOutpoint.proof:type_name -> ark.v1.OwnershipProof
	19, // 15: ark.v1.ScheduledSweep.outputs:type_name -> ark.v1.SweepableOutput
	8,  // 16: ark.v1.TxRequestInfo.receivers:type_name -> ark.v1.Output
	22, // 17: ark.v1.TxRequestInfo.inputs:type_name -> ark.v1.RequestInput
	22, // 18: ark.v1.TxRequestInfo.boarding_inputs:type_name -> ark.v1.RequestInput
	1,  // 19: ark.v1.HashRateContract.contract_type:type_name -> ark.v1.ContractType
	2,  // 20: ark.v1.HashRateContract.status:type_name -> ark.v1.ContractStatus
	3,  // 21: ark.v1.Order.side:type_name -> ark.v1.OrderSide
	1,  // 22: ark.v1.Order.contract_type:type_name -> ark.v1.ContractType
	4,  // 23: ark.v1.Order.status:type_name -> ark.v1.OrderStatus
	26, // 24: ark.v1.OrderBook.bids:type_name -> ark.v1.OrderBookEntry
	26, // 25: ark.v1.OrderBook.asks:type_name -> ark.v1.OrderBookEntry
	9,  // 26: ark.v1.RoundFinalizationEvent.vtxo_tree:type_name -> ark.v1.Tree
	9,  // 27: ark.v1.RoundFinalizationEvent.connectors:type_name -> ark.v1.Tree
	44, // 28: ark.v1.RoundFinalizationEvent.connectors_index:type_name -> ark.v1.RoundFinalizationEvent.ConnectorsIndexEntry
	9,  // 29: ark.v1.RoundSigningEvent.unsigned_vtxo_tree:type_name -> ark.v1.Tree
	23, // 30: ark.v1.ContractCreatedEvent.contract:type_name -> ark.v1.HashRateContract
	24, // 31: ark.v1.OrderCreatedEvent.order:type_name -> ark.v1.Order
	24, // 32: ark.v1.OrderUpdatedEvent.order:type_name -> ark.v1.Order
	25, // 33: ark.v1.TradeExecutedEvent.trade:type_name -> ark.v1.Trade
	8,  // 34: ark.v1.CreateOutOfRoundTxRequest.outputs:type_name -> ark.v1.Output
	6,  // 35: ark.v1.RoundFinalizationEvent.ConnectorsIndexEntry.value:type_name -> ark.v1.Outpoint
	36, // [36:36] is the sub-list for method output_type
	36, // [36:36] is the sub-list for method input_type
	36, // [36:36] is the sub-list for extension type_name
	36, // [36:36] is the sub-list for extension extendee
	0,  // [0:36] is the sub-list for field type_name
}

func init() { file_ark_v1_types_proto_init() }
func file_ark_v1_types_proto_init() {
	if File_ark_v1_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ark_v1_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Round); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Outpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Input); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Output); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TreeLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vtxo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoundTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedeemTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OwnershipProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignedVtxoOutpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tapscripts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketHour); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SweepableOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScheduledSweep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxRequestInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashRateContract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Trade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderBookEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderBook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistoricalHashrate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoundFinalizationEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoundFinalizedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoundFailed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoundSigningEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoundSigningNoncesGeneratedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractCreatedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractSetupEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractSettledEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCreatedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderUpdatedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeExecutedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExitPathRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExitPathResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOutOfRoundTxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ark_v1_types_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOutOfRoundTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ark_v1_types_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Input_Descriptor_)(nil),
		(*Input_Tapscripts)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ark_v1_types_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   40,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ark_v1_types_proto_goTypes,
		DependencyIndexes: file_ark_v1_types_proto_depIdxs,
		EnumInfos:         file_ark_v1_types_proto_enumTypes,
		MessageInfos:      file_ark_v1_types_proto_msgTypes,
	}.Build()
	File_ark_v1_types_proto = out.File
	file_ark_v1_types_proto_rawDesc = nil
	file_ark_v1_types_proto_goTypes = nil
	file_ark_v1_types_proto_depIdxs = nil
}
